Combination count: 600
Datasize: 3315, feature: 39

Start at: 19:35:17  11/5/2021

One iteration took: 2.92 secounds
Estimated time: 0:58:22
Expected done at : 20:33:43 11/5/2021
Fitting 10 folds for each of 600 candidates, totalling 6000 fits
[Parallel(n_jobs=10)]: Using backend LokyBackend with 10 concurrent workers.
[Parallel(n_jobs=10)]: Done  40 tasks      | elapsed:    0.3s
[Parallel(n_jobs=10)]: Done 620 tasks      | elapsed:    3.6s
[Parallel(n_jobs=10)]: Done 1620 tasks      | elapsed:    9.2s
[Parallel(n_jobs=10)]: Done 3020 tasks      | elapsed:   17.0s
[Parallel(n_jobs=10)]: Done 4820 tasks      | elapsed:   26.8s
[Parallel(n_jobs=10)]: Done 5981 out of 6000 | elapsed:   33.1s remaining:    0.0s
[Parallel(n_jobs=10)]: Done 6000 out of 6000 | elapsed:   33.1s finished
ended at: 19:35:53  11/5/2021
current TimeScaler:1.6038012553312277

New Model score: 0.598198230990427
New model saved

Pipeline : 0.598198230990427

SEARCH TIME: 33.29 sec

Best model set found on train set:

	best parameters={'SGD__alpha': 0.1, 'SGD__eta0': 1e-05, 'SGD__l1_ratio': 0.3, 'SGD__penalty': 'l2', 'SGD__tol': 1e-10}
	best 'f1_micro' score=0.598198230990427
	best index=35

Best estimator CTOR:
	Pipeline(steps=[('scaler', StandardScaler()),
                ('SGD',
                 SGDClassifier(alpha=0.1, early_stopping=True, eta0=1e-05,
                               l1_ratio=0.3, max_iter=100000.0,
                               n_iter_no_change=10, n_jobs=1, tol=1e-10,
                               warm_start=True))])

Grid scores ('f1_micro') on development set:
	[ 0]: 0.588 (+/-0.002) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 1e-10}
	[ 1]: 0.584 (+/-0.030) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 2.5e-08}
	[ 2]: 0.588 (+/-0.002) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 5.1e-06}
	[ 3]: 0.588 (+/-0.002) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 0.3324}
	[ 4]: 0.588 (+/-0.002) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 0.794}
	[ 5]: 0.588 (+/-0.021) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 1e-10}
	[ 6]: 0.594 (+/-0.020) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 2.5e-08}
	[ 7]: 0.592 (+/-0.025) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 5.1e-06}
	[ 8]: 0.596 (+/-0.026) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 0.3324}
	[ 9]: 0.594 (+/-0.028) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 0.794}
	...
	[588]: 0.570 (+/-0.106) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l1', 'SGD__tol': 0.3324}
	[589]: 0.553 (+/-0.141) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l1', 'SGD__tol': 0.794}
	[590]: 0.589 (+/-0.023) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 1e-10}
	[591]: 0.588 (+/-0.016) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 2.5e-08}
	[592]: 0.589 (+/-0.007) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 5.1e-06}
	[593]: 0.591 (+/-0.010) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 0.3324}
	[594]: 0.590 (+/-0.008) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 0.794}
	[595]: 0.570 (+/-0.106) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 1e-10}
	[596]: 0.553 (+/-0.141) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 2.35e-08}
	[597]: 0.570 (+/-0.106) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 5.61e-06}
	[598]: 0.570 (+/-0.106) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 0.03324}
	[599]: 0.570 (+/-0.106) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 0.3794}

Detailed classification report:
	The model is trained on the full development set.
	The scores are computed on the full evaluation set.


              precision    recall  f1-score   support

           0       0.61      0.95      0.75    195665
           1       0.61      0.11      0.19    132485

    accuracy                           0.61    328150
   macro avg       0.61      0.53      0.47    328150
weighted avg       0.61      0.61      0.52    328150


CTOR for best model: Pipeline(steps=[('scaler', StandardScaler()),
                ('SGD',
                 SGDClassifier(alpha=0.1, early_stopping=True, eta0=1e-05,
                               l1_ratio=0.3, max_iter=100000.0,
                               n_iter_no_change=10, n_jobs=1, tol=1e-10,
                               warm_start=True))])

best: score=0.59820, model=Pipeline(SGD__alpha=0.1,SGD__eta0=1e-05,SGD__l1_ratio=0.3,SGD__penalty='l2',SGD__tol=1e-10)