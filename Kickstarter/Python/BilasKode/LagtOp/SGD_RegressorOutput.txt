Combination count: 600
Datasize: 3315, feature: 39

Start at: 19:29:31  11/5/2021

One iteration took: 3.08 secounds
Estimated time: 1:1:35
Expected done at : 20:31:10 11/5/2021
Fitting 10 folds for each of 600 candidates, totalling 6000 fits
[Parallel(n_jobs=10)]: Using backend LokyBackend with 10 concurrent workers.
[Parallel(n_jobs=10)]: Done  40 tasks      | elapsed:    0.5s
[Parallel(n_jobs=10)]: Done 340 tasks      | elapsed:    4.4s
[Parallel(n_jobs=10)]: Done 840 tasks      | elapsed:   10.4s
[Parallel(n_jobs=10)]: Done 1540 tasks      | elapsed:   19.0s
[Parallel(n_jobs=10)]: Done 2440 tasks      | elapsed:   30.3s
[Parallel(n_jobs=10)]: Done 3540 tasks      | elapsed:   43.1s
[Parallel(n_jobs=10)]: Done 4840 tasks      | elapsed:   58.3s
[Parallel(n_jobs=10)]: Done 6000 out of 6000 | elapsed:  1.2min finished
ended at: 19:30:46  11/5/2021
current TimeScaler:1.607769331098659

New Model score: -0.0010555566841269903
New model saved

Pipeline : -0.0010555566841269903

SEARCH TIME: 71.79 sec

Best model set found on train set:

	best parameters={'SGD__alpha': 0.7196856730011522, 'SGD__eta0': 1e-05, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'elasticnet', 'SGD__tol': 0.001333521432163324}
	best 'r2' score=-0.0010555566841269903
	best index=388

Best estimator CTOR:
	Pipeline(steps=[('scaler', StandardScaler()),
                ('SGD',
                 SGDRegressor(alpha=0.7196856730011522, early_stopping=True,
                              eta0=1e-05, l1_ratio=0.1,
                              learning_rate='adaptive', max_iter=100000.0,
                              n_iter_no_change=10, penalty='elasticnet',
                              tol=0.001333521432163324, warm_start=True))])

Grid scores ('r2') on development set:
	[ 0]: -0.113 (+/-0.446) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 1e-10}
	[ 1]: -0.132 (+/-0.454) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 2.5e-08}
	[ 2]: -0.055 (+/-0.169) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 5.1e-06}
	[ 3]: -0.065 (+/-0.197) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 0.3324}
	[ 4]: -0.038 (+/-0.158) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l1', 'SGD__tol': 0.794}
	[ 5]: -0.052 (+/-0.177) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 1e-10}
	[ 6]: -0.056 (+/-0.219) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 2.5e-08}
	[ 7]: -0.124 (+/-0.483) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 5.1e-06}
	[ 8]: -0.090 (+/-0.408) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 0.3324}
	[ 9]: -0.040 (+/-0.162) for {'SGD__alpha': 0.1, 'SGD__l1_ratio': 0.1, 'SGD__penalty': 'l2', 'SGD__tol': 0.794}
	...                     
	[588]: -0.126 (+/-0.470) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l1', 'SGD__tol': 0.3324}
	[589]: -0.044 (+/-0.157) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l1', 'SGD__tol': 0.794}
	[590]: -0.029 (+/-0.134) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 1e-10}
	[591]: -0.032 (+/-0.136) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 2.5e-08}
	[592]: -0.030 (+/-0.130) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 5.1e-06}
	[593]: -0.025 (+/-0.129) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 0.3324}
	[594]: -0.020 (+/-0.089) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'l2', 'SGD__tol': 0.794}
	[595]: -0.058 (+/-0.230) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 1e-10}
	[596]: -0.063 (+/-0.270) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 2.35e-08}
	[597]: -0.061 (+/-0.243) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 5.61e-06}
	[598]: -0.054 (+/-0.235) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 0.03324}
	[599]: -0.027 (+/-0.111) for {'SGD__alpha': 1.58, 'SGD__l1_ratio': 0.5, 'SGD__penalty': 'elasticnet', 'SGD__tol': 0.3794}